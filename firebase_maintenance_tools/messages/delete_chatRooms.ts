/** Êú¨‰∫∫Ôºà„É≠„Ç∞„Ç§„É≥uidÔºâ„ÇíÂºïÊï∞„Å´„Éû„ÉÉ„ÉÅ„É™„Çπ„Éà„Å®ChatRoomId„ÇíÂèñÂæó„Åô„Çã */
import { Firestore } from '@google-cloud/firestore';
import * as path from 'path';

console.log("==========================================================================");
console.log("‚òÄÔ∏è hello! firebase_maintenance_tools/messages/delete_chatRooms.ts !!");
console.log("==========================================================================");

const firestore = new Firestore({
  projectId: 'bcmhzt-b25e9',
  keyFilename: path.resolve(__dirname, '../bcmhzt-b25e9-firebase-adminsdk-oywau-d9a2d47d80.json'),
  databaseId: 'bacmhzt-prod-firestore-messages',
});

/**
 * % npx ts-node messages/delete_chatRooms.ts 3db330cf57f4bd412bda3aa6853f93906c309d411c8208b8cb5c752d64a2e6ad
 * 
 * ÂºïÊï∞„Å´chatRoomId
 * chats„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Åã„ÇâchatRooms„ÇíÂèñÂæó„Åó„Å¶„ÄÅ„Åù„ÅÆchatRoom„ÇíÁâ©ÁêÜÂâäÈô§„Åô„Çã
 * ÂâäÈô§„Åó„ÅüchatRoomIdÔºàDocumentIdÔºâ„ÇíÂá∫Âäõ
 * ÈÖç‰∏ã„ÅÆ„Çµ„Éñ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥(messages)„ÇÇÁâ©ÁêÜÂâäÈô§„Åô„Çã
 */

const chatRoomId = process.argv[2];
if (!chatRoomId) {
  console.error("‚ùå chatRoomId „ÇíÂºïÊï∞„Å´ÊåáÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
  process.exit(1);
}
console.log("üìå chatRoomId (doc id):", chatRoomId);



/**
 * „Çµ„Éñ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÜçÂ∏∞ÂâäÈô§
 */
async function deleteSubcollectionRecursively(
  collectionRef: FirebaseFirestore.CollectionReference,
  batchSize: number = 100
) {
  const snapshot = await collectionRef.limit(batchSize).get();
  if (snapshot.empty) {
    return;
  }

  const batch = firestore.batch();
  snapshot.docs.forEach((doc) => {
    batch.delete(doc.ref);
  });
  await batch.commit();

  console.log(`   üóëÔ∏è ${snapshot.size} docs deleted from ${collectionRef.path}`);

  // „Åæ„Å†ÊÆã„Å£„Å¶„ÅÑ„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Åü„ÇÅÂÜçÂ∏∞
  await deleteSubcollectionRecursively(collectionRef, batchSize);
}

/**
 * „É°„Ç§„É≥„ÉÅ„É£„ÉÉ„Éà„É´„Éº„É†ÂâäÈô§Âá¶ÁêÜ
 */
async function deleteChatRoomWithMessages(chatRoomId: string) {
  const chatRoomRef = firestore.collection('chats').doc(chatRoomId);

  // Â≠òÂú®Á¢∫Ë™ç
  const chatRoomSnap = await chatRoomRef.get();
  if (!chatRoomSnap.exists) {
    console.error(`‚ö†Ô∏è ChatRoomId ${chatRoomId} „ÅØÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ`);
    return;
  }

  console.log(`‚úÖ ChatRoom ${chatRoomId} found. Deleting messages...`);

  // messages „Çµ„Éñ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÜçÂ∏∞ÂâäÈô§
  const messagesRef = chatRoomRef.collection('messages');
  await deleteSubcollectionRecursively(messagesRef);

  // „É°„Ç§„É≥„Éâ„Ç≠„É•„É°„É≥„ÉàÂâäÈô§
  await chatRoomRef.delete();
  console.log(`üéØ ChatRoom ${chatRoomId} document deleted.`);
}

deleteChatRoomWithMessages(chatRoomId)
  .then(() => {
    console.log("üéâ All done!");
    process.exit(0);
  })
  .catch((err) => {
    console.error("‚ùå Error deleting chat room:", err);
    process.exit(1);
  });

